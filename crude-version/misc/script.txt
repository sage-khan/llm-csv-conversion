#!/bin/bash

# Variables
REMOTE_HOST="conversion@192.168.0.110"
REMOTE_INPUT_DIR="/srv/dev-disk-by-uuid-281ef326-2aff-405e-b1e4-061cebc27cad/VirtuousAccountants/Itax/File-to-be-converted"
LOCAL_INPUT_DIR="$HOME/conversion-files"
PROCESSED_DIR="$HOME/converted-source-files/$(date +%d-%m-%y)"
REMOTE_PROCESSED_DIR="/srv/dev-disk-by-uuid-281ef326-2aff-405e-b1e4-061cebc27cad/VirtuousAccountants/Itax/Converted-Files"

# Step 1b: Sync remote input directory with local input directory
rsync -avz --remove-source-files $REMOTE_HOST:"$REMOTE_INPUT_DIR/" "$LOCAL_INPUT_DIR/"

# Change directory to local input directory
cd "$LOCAL_INPUT_DIR"

# Step 2: Process files
for file in *; do
    if [[ -f "$file" ]]; then
        # Determine the output filename without its extension
        filename=$(basename -- "$file")
        extension="${filename##*.}"
        filename="${filename%.*}"

        # Step 2a: Convert to searchable PDF
        ocrmypdf --force-ocr --optimize 1 "$file" "${filename}-ocr.${extension}"

        # Step 2b: Convert PDF to text
        pdftotext "${filename}-ocr.${extension}" "${filename}.txt"

        # Step 2c: Process text to CSV (Mock command for illustrative purposes)
        # Ensure you replace this with the actual command you need
        echo "Processing ${filename}.txt to ${filename}.csv"
        cat "${filename}.txt" | awk '{print $0","}' > "${filename}.csv"
    fi
done

# Step 4: Move CSVs back to the remote processed directory
rsync -avz *.csv $REMOTE_HOST:"$REMOTE_PROCESSED_DIR/"

# Step 5a: Move processed source files to a dated folder
mkdir -p "$PROCESSED_DIR"
mv * "$PROCESSED_DIR/"

# Clear remote input directory (Be careful with this step to avoid accidental data loss)
ssh $REMOTE_HOST "rm -f $REMOTE_INPUT_DIR/*"


##Script for UBUNTU. It should do following:

#1a. ssh into remote host conversion@192.168.0.110. Make sure you have certificates configured. (Need steps for that also) i.e. When prompted, you can press enter to save the key pair in the default location and with no passphrase for automation purposes (though for security, a passphrase is recommended for manual operations). "ssh-keygen -t rsa -b 4096" , ssh-copy-id conversion@192.168.0.110 i.e. This command will ask for the remote user's password. Once entered correctly, the local machine's public SSH key will be added to the ~/.ssh/authorized_keys file of the remote user, enabling passwordless SSH login.
  #1b. Check input folder "/srv/dev-disk-by-uuid-281ef326-2aff-405e-b1e4-061cebc27cad/VirtuousAccountants/Itax/File-to-be-converted" which is in remote host conversion@192.168.0.110 for any new document (pdf, txt, HTML, csv, image or whatever) and copy it locally in "~/conversion-files"
#1c. change directory to ~/conversion-files
#1d. script should have inotify enabled on ~/conversion-files to check if there is any new file input
#2a. run ocrmypdf linux commandline tool file and convert it into text searchable pdf named <filename>-ocr.<extension> i.e ocrmypdf --force-ocr --optimize 1 <filename>.pdf <filename>-ocr.<extension>
#2b. run pdftotext linux commandline tool on the <filename>-ocr.<extension> file and convert it into txt file with same name as original input file name (not the <filename>-ocr.<extension>)
#2c. run Linux command i.e ollama run mistral "You are an expert in data formatting and structuring. Please read all contents of $(cat <filename>.txt) and structure it into csv style table format as per example given in $(cat ../template.txt)" >> <filename>.csv. the output of the above command is then saved as csv file in same folder which has same name as input doc file name e.g. if input doc name is a1.pdf then output csv name will be a1.csv. it will also save the output as text file i.e. a1.txt if input document is a1.pdf forexample.
#3. run #2a to #2c in a loop for all files within the local input folder i.e ~/conversion-files
#4. This csv will be copied /srv/dev-disk-by-uuid-281ef326-2aff-405e-b1e4-061cebc27cad/VirtuousAccountants/Itax/Converted-Files which is in conversion@192.168.0.110 remote host
#5a.Move all input files that were copied in local folder ~/conversion-files to ~/converted-source-files/<foldername is today's date as dd-mm-yy>
#5b The remote input folder is then cleared and then is continuously monitored for any other pdf file saved in the input folder.
